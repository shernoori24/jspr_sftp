<?php
namespace Controllers;

use Models\SubscriberModel;
use Models\EmailModel;

class SubscriberController {
    // Ce contr√¥leur g√®re les op√©rations li√©es aux abonn√©s de la newsletter

    protected $subscriberModel; // Mod√®le pour g√©rer les abonn√©s
    protected $emailModel; // Mod√®le pour g√©rer l'envoi d'emails


    public function __construct() {
        // Initialisation des mod√®les n√©cessaires
        $this->subscriberModel = new SubscriberModel();
        $this->emailModel = new EmailModel();
    }
    // M√©thode pour afficher la page de abbonn√©
    public function affichePageAdminSubscribers() {
        include 'src/views/admin/abonnes.php';
    }

    // R√©cup√®re tous les abonn√©s depuis la base de donn√©es
    public function getAllSubscribers() {

        return $this->subscriberModel->getAllSubscribers();
    }

    // Ajoute un nouvel abonn√© et envoie un email de confirmation
    public function addSubscriber($email) {
        if ($_SERVER['REQUEST_METHOD'] === 'POST') {
            if (filter_var($email, FILTER_VALIDATE_EMAIL)) {
                try {
                    $this->subscriberModel->addSubscriber($email);
        
                    // Envoyer un email de confirmation
                    $subject = "Bienvenue dans notre Newsletter - Activation de votre inscription";
                    $content = "
                        <h1 style='color:#2c3e50;'>Bienvenue √† la Newsletter de notre association</h1>
                        <p>Merci de vous √™tre inscrit(e) √† notre newsletter ! Nous sommes ravis de vous compter parmi nous.</p>
                        <p>Gr√¢ce √† cette newsletter, vous recevrez :</p>
                        <ul>
                            <li>üìÖ Les derni√®res actualit√©s et √©v√©nements de l'association</li>
                            <li>üé≠ Nos prochains ateliers et formations</li>
                            <li>üì∞ Le journal de l'association avec des t√©moignages et des mises √† jour</li>
                        </ul>
                        <p>Si vous n'avez pas demand√© cette inscription, d√©sabonnez-vous ci-dessous.</p>
                        <p>√Ä tr√®s bient√¥t,</p>
                        <p><strong>L'√©quipe de l'association J'SPR</strong></p>
                    ";
        
                    $token = $this->subscriberModel->generateUnsubscribeToken($email);
                    $unsubscribeLink = "http://localhost/projets/jspr/unsubscribe?email=" . urlencode($email) . "&token=" . $token;
        
                    $this->emailModel->sendEmail($email, $subject, $content, $unsubscribeLink, []);


                    // $_SESSION['status'] = "Abonn√© ajout√© avec succ√®s.";
                    // Retourner une r√©ponse JSON pour AJAX
                    header('Content-Type: application/json');
                    echo json_encode(['success' => true, 'message' => 'Abonn√© ajout√© avec succ√®s.']);
                } catch (\Exception $e) {
                    // G√©rer l'exception (email d√©j√† existant)
                    // $_SESSION['error'] = $e->getMessage();
                    // Retourner une r√©ponse JSON en cas d'erreur
                    header('Content-Type: application/json');
                    echo json_encode(['success' => false, 'message' => $e->getMessage()]);
                }
            } else {
                // $_SESSION['error'] = "Veuillez entrer une adresse email valide.";
                // Retourner une r√©ponse JSON si l'email est invalide
                header('Content-Type: application/json');
                echo json_encode(['success' => false, 'message' => 'Veuillez entrer une adresse email valide.']);
            }
        }


    }
    public function searchSubscriber($search_email){
        
            return $this->subscriberModel->searchSubscriber($search_email);
        
    }

    // Met √† jour l'email d'un abonn√© existant
    public function updateSubscriber($id, $email) {

        if (filter_var($email, FILTER_VALIDATE_EMAIL)) {
            $this->subscriberModel->updateSubscriber($id, $email);
            $_SESSION['status'] = "Abonn√© modifi√© avec succ√®s.";
        } else {
            $_SESSION['error'] = "Veuillez entrer une adresse email valide.";
        }
    }

    // Supprime un abonn√© de la base de donn√©es
    public function deleteSubscriber($id) {

        $this->subscriberModel->deleteSubscriber($id);
        $_SESSION['status'] = "Abonn√© supprim√© avec succ√®s.";
    }

    // G√®re le processus de d√©sabonnement d'un utilisateur
    public function unsubscribe($email, $token) {

        if (filter_var($email, FILTER_VALIDATE_EMAIL)) {
            if ($this->subscriberModel->validateUnsubscribeToken($email, $token)) {
                if ($this->subscriberModel->deleteSubscriberByEmail($email)) {
                    echo "<h2>Vous avez bien √©t√© supprim√© de notre liste d'abonnement.</h2>";
                } else {
                    error_log("Erreur lors de la suppression de l'abonn√© : $email");
                    echo "<h2>Erreur : Impossible de vous d√©sabonner.</h2>";
                }
            } else {
                error_log("Tentative de d√©sabonnement avec un token invalide : $email");
                echo "<h2>Token invalide ou expir√©.</h2>";
            }
        } else {
            echo "<h2>Email invalide.</h2>";
        }
    }
}
